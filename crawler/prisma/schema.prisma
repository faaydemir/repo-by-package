generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Repo {
  githubId           BigInt?          @unique
  owner              String
  name               String
  fullName           String?
  url                String?
  htmlUrl            String?
  description        String?
  language           String?
  topics             String?
  defaultBranch      String?
  stargazersCount    Int?
  watchersCount      Int?
  forksCount         Int?
  openIssuesCount    Int?
  license            Json?
  private            Boolean          @default(false)
  createdAt          DateTime?
  updatedAt          DateTime?
  pushedAt           DateTime?
  languages          String[]         @default([])
  languageDetails    Json? 
  insertedAt         DateTime         @default(now())
  packageProcessedAt DateTime?
  processible        Boolean          @default(true)
  id                 Int              @id @default(autoincrement())
  repoRependencies   RepoDependency[]
}

model RepoDependency {
  path               String?
  commitId           String?
  insertedAt         DateTime            @default(now())
  packageProvider    String?
  id                 Int                 @id @default(autoincrement())
  repoId             Int
  dependencyMappings DependencyMapping[]
  repo               Repo                @relation(fields: [repoId], references: [id])

  @@unique([repoId, path])
}

model Dependency {
  name               String
  provider           String
  id                 Int                 @id @default(autoincrement())
  dependencyMappings DependencyMapping[]

  @@unique([name, provider])
}

model DependencyMapping {
  version          String?
  insertedAt       DateTime       @default(now())
  versionText      String?
  dependencyType   String?
  id               Int            @id @default(autoincrement())
  dependencyId     Int
  repoDependencyId Int
  maxVersion       String?
  minVersion       String?
  dependency       Dependency     @relation(fields: [dependencyId], references: [id])
  repoDependency   RepoDependency @relation(fields: [repoDependencyId], references: [id])

  @@unique([repoDependencyId, dependencyId])
}

model RepoCrawTaskRun {
  taskKey             String    @unique
  lastRunAt           DateTime?
  isCompleted Boolean   @default(false)
  error               String?
  id                  Int       @id @default(autoincrement())
  maxStars            Int
}
